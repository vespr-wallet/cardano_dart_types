import "package:cardano_dart_types/cardano_dart_types.dart";
import "package:test/test.dart";

void main() async {
  group("CardanoTransactionBody", () {
    group("parsing", () {
      test("intputs cbor tags", () async {
        final txBody = [
          "a400d90102818258203b40265111d8bb3c3c608d95b3a0bf83461ace32d79336579a1939b3aad1c0b700018002182a030a",
          "a400818258203b40265111d8bb3c3c608d95b3a0bf83461ace32d79336579a1939b3aad1c0b700018002182a030a",
        ];

        final txWithTags = CardanoTransactionBody.deserializeHex(txBody[0]);
        final txWithoutTags = CardanoTransactionBody.deserializeHex(txBody[1]);

        expect(txWithTags.inputs.cborTags, [258]);
        expect(txWithoutTags.inputs.cborTags, []);
      });
      test("hex", () async {
        const input =
            "";

        final tx = CardanoTransaction.deserializeFromHex(input);

        const expectedBody =
            "a70085825820fd9a0bc89a2b0a6e4617fe361d18a0b31c6c2d6352013675598d5f9896c42e6c0082582073a0b7a80a107afd1b37ba61c579e6e0ff9063ce9812addfb50f602b4126016d018258200b94858a404cc6fc0d7f6a5eec3e1a0b6f4e66a9bea8ea90f0ec82d8cf6eea1a01825820e355edd62518193f8efd7d382193d0af34d4130c999be09485929fcbcb808509008258200e544cc9b26d36934942bbcf7430caa2d9c46d7e5fb58c02f31fa1e61586083f020184825839013bdd941f4f77fda1c7aa416de059347d4965f2035b02f22e1b31c321aabaf579c7ac3816cf53e44361796ac35bd0e37b87a5ee4dec93a29b1a0087a23782583901815f778a2ba10aa0fdc4acf1436e701f78d6f717361d4164c95dcfb77e9edebd75b1908b72519186c997cd98e6d62e5636f0e3aea1ee51401a000f424082583901ed49d9adbd06592290b9a16032375d6b79d4df760cad0d9bca9555fc4199f66b16ce9eb5849ed96473face025b2e9bcbdf1e352ad4362981821a00159282a1581ca02684b9ece84a4341585d2ae813163356ba0ca950091d1935bdb905a1514855534b59484f53544c455231353031330182583901ed49d9adbd06592290b9a16032375d6b79d4df760cad0d9bca9555fc4199f66b16ce9eb5849ed96473face025b2e9bcbdf1e352ad43629811a14ddc075021a0009ffd8031a0487ded1081a0487d02b0b5820337d35fe2968e6fbef26024418393574cf0f44839c59a49faa42f312c4e9f9200d81825820319c7d0b78c6ebc15246fcc53b4ed7cadfe1d53bb77034d38b38f22e6bc74c3e04";

        expect(cborEncode(tx.body.serialize(forJson: false)).hexEncode(), expectedBody);
        expect(tx.body.serializeAsBytes().hexEncode(), expectedBody);
        expect(tx.body.serializeHexString(), expectedBody);
      });
    });

    group("re-serialize", () {
      test("hex", () async {
        const expectedBody =
            "a70085825820fd9a0bc89a2b0a6e4617fe361d18a0b31c6c2d6352013675598d5f9896c42e6c0082582073a0b7a80a107afd1b37ba61c579e6e0ff9063ce9812addfb50f602b4126016d018258200b94858a404cc6fc0d7f6a5eec3e1a0b6f4e66a9bea8ea90f0ec82d8cf6eea1a01825820e355edd62518193f8efd7d382193d0af34d4130c999be09485929fcbcb808509008258200e544cc9b26d36934942bbcf7430caa2d9c46d7e5fb58c02f31fa1e61586083f020184825839013bdd941f4f77fda1c7aa416de059347d4965f2035b02f22e1b31c321aabaf579c7ac3816cf53e44361796ac35bd0e37b87a5ee4dec93a29b1a0087a23782583901815f778a2ba10aa0fdc4acf1436e701f78d6f717361d4164c95dcfb77e9edebd75b1908b72519186c997cd98e6d62e5636f0e3aea1ee51401a000f424082583901ed49d9adbd06592290b9a16032375d6b79d4df760cad0d9bca9555fc4199f66b16ce9eb5849ed96473face025b2e9bcbdf1e352ad4362981821a00159282a1581ca02684b9ece84a4341585d2ae813163356ba0ca950091d1935bdb905a1514855534b59484f53544c455231353031330182583901ed49d9adbd06592290b9a16032375d6b79d4df760cad0d9bca9555fc4199f66b16ce9eb5849ed96473face025b2e9bcbdf1e352ad43629811a14ddc075021a0009ffd8031a0487ded1081a0487d02b0b5820337d35fe2968e6fbef26024418393574cf0f44839c59a49faa42f312c4e9f9200d81825820319c7d0b78c6ebc15246fcc53b4ed7cadfe1d53bb77034d38b38f22e6bc74c3e04";

        final body = CardanoTransactionBody.deserializeHex(expectedBody);

        expect(cborEncode(body.serialize(forJson: false)).hexEncode(), expectedBody);
        expect(body.serializeAsBytes().hexEncode(), expectedBody);
        expect(body.serializeHexString(), expectedBody);
      });
    });
  });
}
